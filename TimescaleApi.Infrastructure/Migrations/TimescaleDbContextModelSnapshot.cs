// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TimescaleApi.Infrastructure.Persistence;

#nullable disable

namespace TimescaleApi.Infrastructure.Migrations
{
    [DbContext(typeof(TimescaleDbContext))]
    partial class TimescaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TimescaleApi.Domain.Entities.ResultEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<double>("AvgExecutionTime")
                        .HasColumnType("double precision")
                        .HasColumnName("avg_execution_time");

                    b.Property<double>("AvgValue")
                        .HasColumnType("double precision")
                        .HasColumnName("avg_value");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<DateTime>("FirstDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("first_date");

                    b.Property<double>("MaxValue")
                        .HasColumnType("double precision")
                        .HasColumnName("max_value");

                    b.Property<double>("MedianValue")
                        .HasColumnType("double precision")
                        .HasColumnName("median_value");

                    b.Property<double>("MinValue")
                        .HasColumnType("double precision")
                        .HasColumnName("min_value");

                    b.Property<double>("TimeDeltaSeconds")
                        .HasColumnType("double precision")
                        .HasColumnName("time_delta_seconds");

                    b.HasKey("Id");

                    b.ToTable("results", (string)null);
                });

            modelBuilder.Entity("TimescaleApi.Domain.Entities.ValueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<double>("ExecutionTime")
                        .HasColumnType("double precision")
                        .HasColumnName("execution_time");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("values", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
